9.1_Decorator_Pattern_and_Middleware

The Decorator Pattern is a structural design pattern that:
        Lets you wrap objects or functions with additional behavior.
        Behaves like a chain, where each layer adds something to the original.
ðŸ§¾ In Go, the decorator pattern often wraps functions with pre/post logic without 
   changing their signature.


                              Request
                                â†“
                              [ LoggerMiddleware ]
                                â†“
                              [ AuthMiddleware ]
                                â†“
                              [ YourHandler ]
                                â†“
                              Response Backward
                                â†‘
                              [ AuthMiddleware Post ]
                                â†‘
                              [ LoggerMiddleware Post ]


Bread â†’ Sauce â†’ Cheese â†’ Meat â†’ Lettuce â†’ Bread
Each middleware wraps the handler like a layer â€” it adds behavior.

