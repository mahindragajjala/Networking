5.4_Sending_Custom_Error_Responses

Sending Custom Error Responses means you send clear, structured, and 
meaningful error messages to the client 
— instead of generic 500 Internal Server Error messages.

This improves:
✅ Developer experience
✅ Debugging
✅ Client integration


  use cases
 Scenario              Custom Error Response                    
 Missing request body  `{"error": "request body required"}`     
 Unauthorized access   `{"error": "unauthorized", "code": 401}` 
 Validation failed     `{"error": "email is required"}`         
 Resource not found    `{"error": "user not found"}`            



✅ Define a Standard Error Format
              type ErrorResponse struct {
              	Code    int    `json:"code"`
              	Message string `json:"message"`
              }
              
 ✅ Send Custom Errors in Handlers
              func getUser(c *gin.Context) {
              	id := c.Param("id")
              	if id == "" {
              		c.JSON(http.StatusBadRequest, ErrorResponse{
              			Code:    4001,
              			Message: "User ID is required",
              		})
              		return
              	}
              
              	// simulate DB error
              	if id != "123" {
              		c.JSON(http.StatusNotFound, ErrorResponse{
              			Code:    4004,
              			Message: "User not found",
              		})
              		return
              	}
              
              	// success
              	c.JSON(http.StatusOK, gin.H{"user": id})
              }


✅ Custom Error in Middleware (optional)
            func AuthMiddleware() gin.HandlerFunc {
            	return func(c *gin.Context) {
            		token := c.GetHeader("Authorization")
            		if token == "" {
            			c.AbortWithStatusJSON(http.StatusUnauthorized, ErrorResponse{
            				Code:    4010,
            				Message: "Missing auth token",
            			})
            			return
            		}
            		c.Next()
            	}
            }
